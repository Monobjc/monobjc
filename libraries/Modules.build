<?xml version="1.0"?>
<project name="Monobjc Module Builder" default="build" basedir="..">
  <description>Monobjc Module Builder</description>

  <!-- ===============================================================================
  Extract and generate classes from Apple documentation
  ================================================================================ -->
  <target name="generate">
    <!-- Builds the generator -->
    <exec workingdir="${tools.dir}"
          program="xbuild"
          failonerror="true"
          commandline="/property:Configuration=Release Monobjc.Generator.NAnt/Monobjc.Generator.NAnt.csproj"
          >
          <!--
          unless="${file::exists(marker.file)}"
          -->
    </exec>
    
    <nant buildfile="${tools.dir}/Monobjc.Generator.NAnt/bin/Release/Generate.build"
          target="copy-in-place"
          >
          <!--
          unless="${file::exists(marker.file)}"
          -->
    </nant>

    <touch file="${marker.file}"/>
  </target>

  <!-- ===============================================================================
  Build all the sets of libraries
  ================================================================================ -->
  <target name="build" depends="generate">

    <if test="${version::get-minor(version::parse(min.version)) &lt;= 6}" >
      <property name="version" value="10.6"/>
      <property name="define" value="MACOSX_10_5;MACOSX_10_6" unless="${testing}"/>
      <property name="define" value="TESTING;MACOSX_10_5;MACOSX_10_6" if="${testing}"/>
      <call target="build-libraries-intern" if="${version::get-minor(version::parse(max.version)) >= 6}"/>
    </if>

    <if test="${version::get-minor(version::parse(min.version)) &lt;= 7}" >
      <property name="version" value="10.7"/>
      <property name="define" value="MACOSX_10_5;MACOSX_10_6;MACOSX_10_7" unless="${testing}"/>
      <property name="define" value="TESTING;MACOSX_10_5;MACOSX_10_6;MACOSX_10_7" if="${testing}"/>
      <call target="build-libraries-intern" if="${version::get-minor(version::parse(max.version)) >= 7}"/>
    </if>

    <if test="${version::get-minor(version::parse(min.version)) &lt;= 8}" >
      <property name="version" value="10.8"/>
      <property name="define" value="MACOSX_10_5;MACOSX_10_6;MACOSX_10_7;MACOSX_10_8" unless="${testing}"/>
      <property name="define" value="TESTING;MACOSX_10_5;MACOSX_10_6;MACOSX_10_7;MACOSX_10_8" if="${testing}"/>
      <call target="build-libraries-intern" if="${version::get-minor(version::parse(max.version)) >= 8}"/>
    </if>

  </target>

  <!-- ===============================================================================
  Build a set of libraries
  ================================================================================ -->
  <target name="build-libraries-intern">
    <echo message="------------------------"/>
    <echo message="Library Set for ${version}"/>
    <echo message="------------------------"/>

    <!-- Output dir is used to build the assemblies -->
    <property name="base.dir" value="${libraries.dir}"/>
    <property name="output.dir" value="${dist.dir}/${version}"/>
    <mkdir dir="${output.dir}"/>

    <assemblyfileset id="lib.references" basedir="${output.dir}">
      <include name="System.dll"/>
      <include name="System.Core.dll"/>
    </assemblyfileset>
    
    <!-- Library Monobjc -->
    <property name="lib.name" value="Monobjc"/>
    <fileset id="src.references" basedir="${output.dir}">
      <include name="${base.dir}/${lib.name}/**/*.cs"/>
    </fileset>
    <call target="build-library-intern"/>

    <assemblyfileset id="lib.references" basedir="${output.dir}">
      <include name="System.dll"/>
      <include name="System.Core.dll"/>
      <include name="Monobjc.dll"/>
    </assemblyfileset>
    
    <!-- Library Monobjc.Foundation -->
    <property name="lib.name" value="Monobjc.Foundation"/>
    <fileset id="src.references" basedir="${output.dir}">
      <include name="${base.dir}/${lib.name}/*.cs"/>
      <include name="${base.dir}/${lib.name}/ApplicationServices_E/CG*.cs"/>
      <include name="${base.dir}/${lib.name}/ApplicationServices_Extensions/*.cs"/>
      <include name="${base.dir}/${lib.name}/ApplicationServices_S/*.cs"/>
      <include name="${base.dir}/${lib.name}/CoreFoundation_T/CFType.cs"/>
      <include name="${base.dir}/${lib.name}/Foundation_C/*.cs"/>
      <include name="${base.dir}/${lib.name}/Foundation_Collections/*.cs"/>
      <include name="${base.dir}/${lib.name}/Foundation_E/*.cs"/>
      <include name="${base.dir}/${lib.name}/Foundation_Extensions/*.cs"/>
      <include name="${base.dir}/${lib.name}/Foundation_P/*.cs"/>
      <include name="${base.dir}/${lib.name}/Foundation_S/*.cs"/>
      <include name="${base.dir}/${lib.name}/Foundation_T/*.cs"/>
      <include name="${base.dir}/${lib.name}/Kernel_Extensions/*.cs"/>
      <include name="${base.dir}/${lib.name}/Kernel_T/*.cs"/>
      <include name="${base.dir}/${lib.name}/Properties/*.cs"/>
    </fileset>
    <call target="build-library-intern"/>

    <assemblyfileset id="lib.references" basedir="${output.dir}">
      <include name="System.dll"/>
      <include name="System.Core.dll"/>
      <include name="Monobjc.dll"/>
      <include name="Monobjc.Foundation.dll"/>
    </assemblyfileset>
    
    <!-- Library Monobjc.CoreLocation -->
    <property name="lib.name" value="Monobjc.CoreLocation"/>
    <fileset id="src.references" basedir="${output.dir}">
      <include name="${base.dir}/${lib.name}/*.cs"/>
      <include name="${base.dir}/${lib.name}/Properties/*.cs"/>
      <include name="${base.dir}/${lib.name}/CoreLocation_C/*.cs"/>
      <include name="${base.dir}/${lib.name}/CoreLocation_E/*.cs"/>
      <include name="${base.dir}/${lib.name}/CoreLocation_P/*.cs"/>
      <include name="${base.dir}/${lib.name}/CoreLocation_S/*.cs"/>
      <include name="${base.dir}/${lib.name}/CoreLocation_T/*.cs"/>
    </fileset>
    <call target="build-library-intern"/>

    <!-- Library Monobjc.Accounts -->
    <property name="lib.name" value="Monobjc.Accounts"/>
    <fileset id="src.references" basedir="${output.dir}">
      <include name="${base.dir}/${lib.name}/*.cs"/>
      <include name="${base.dir}/${lib.name}/Properties/*.cs"/>
      <include name="${base.dir}/${lib.name}/Accounts_C/*.cs"/>
      <include name="${base.dir}/${lib.name}/Accounts_Extensions/*.cs"/>
      <include name="${base.dir}/${lib.name}/Accounts_T/*.cs"/>
    </fileset>
    <call target="build-library-intern"/>

    <!-- Library Monobjc.DiscRecording -->
    <property name="lib.name" value="Monobjc.DiscRecording"/>
    <fileset id="src.references" basedir="${output.dir}">
      <include name="${base.dir}/${lib.name}/*.cs"/>
      <include name="${base.dir}/${lib.name}/Properties/*.cs"/>
      <include name="${base.dir}/${lib.name}/DiscRecording_C/*.cs"/>
      <include name="${base.dir}/${lib.name}/DiscRecording_E/*.cs"/>
      <include name="${base.dir}/${lib.name}/DiscRecording_Extensions/*.cs"/>
      <include name="${base.dir}/${lib.name}/DiscRecording_P/*.cs"/>
      <include name="${base.dir}/${lib.name}/DiscRecording_T/*.cs"/>
    </fileset>
    <call target="build-library-intern"/>

    <!-- Library Monobjc.OpenGL 
    <property name="lib.name" value="Monobjc.OpenGL"/>
    <fileset id="src.references" basedir="${output.dir}">
      <include name="${base.dir}/${lib.name}/*.cs"/>
      <include name="${base.dir}/${lib.name}/Properties/*.cs"/>
      <include name="${base.dir}/${lib.name}/OpenGL_E/*.cs"/>
      <include name="${base.dir}/${lib.name}/OpenGL_Extensions/*.cs"/>
      <include name="${base.dir}/${lib.name}/OpenGL_Parsed/*.cs"/>
      <include name="${base.dir}/${lib.name}/OpenGL_T/*.cs"/>
    </fileset>
    <call target="build-library-intern"/>
    -->

    <!-- Library Monobjc.Security -->
    <property name="lib.name" value="Monobjc.Security"/>
    <fileset id="src.references" basedir="${output.dir}">
      <include name="${base.dir}/${lib.name}/*.cs"/>
      <include name="${base.dir}/${lib.name}/Properties/*.cs"/>
      <include name="${base.dir}/${lib.name}/Security_E/*.cs"/>
      <include name="${base.dir}/${lib.name}/Security_Extensions/*.cs"/>
      <include name="${base.dir}/${lib.name}/Security_S/*.cs"/>
      <include name="${base.dir}/${lib.name}/Security_T/*.cs"/>
    </fileset>
    <call target="build-library-intern"/>

    <!-- Library Monobjc.ScriptingBridge -->
    <property name="lib.name" value="Monobjc.ScriptingBridge"/>
    <fileset id="src.references" basedir="${output.dir}">
      <include name="${base.dir}/${lib.name}/*.cs"/>
      <include name="${base.dir}/${lib.name}/Properties/*.cs"/>
      <include name="${base.dir}/${lib.name}/ScriptingBridge_C/*.cs"/>
      <include name="${base.dir}/${lib.name}/ScriptingBridge_E/*.cs"/>
      <include name="${base.dir}/${lib.name}/ScriptingBridge_P/*.cs"/>
    </fileset>
    <call target="build-library-intern"/>

    <!-- Library Monobjc.StoreKit -->
    <property name="lib.name" value="Monobjc.StoreKit"/>
    <fileset id="src.references" basedir="${output.dir}">
      <include name="${base.dir}/${lib.name}/*.cs"/>
      <include name="${base.dir}/${lib.name}/Properties/*.cs"/>
      <include name="${base.dir}/${lib.name}/StoreKit_C/*.cs"/>
      <include name="${base.dir}/${lib.name}/StoreKit_P/*.cs"/>
      <include name="${base.dir}/${lib.name}/StoreKit_T/*.cs"/>
    </fileset>
    <call target="build-library-intern"/>

    <assemblyfileset id="lib.references" basedir="${output.dir}">
      <include name="System.dll"/>
      <include name="System.Core.dll"/>
      <include name="Monobjc.dll"/>
      <include name="Monobjc.Foundation.dll"/>
      <include name="Monobjc.Security.dll"/>
    </assemblyfileset>
    
    <!-- Library Monobjc.SecurityFoundation -->
    <property name="lib.name" value="Monobjc.SecurityFoundation"/>
    <fileset id="src.references" basedir="${output.dir}">
      <include name="${base.dir}/${lib.name}/*.cs"/>
      <include name="${base.dir}/${lib.name}/Properties/*.cs"/>
      <include name="${base.dir}/${lib.name}/SecurityFoundation_C/*.cs"/>
      <include name="${base.dir}/${lib.name}/SecurityFoundation_S/*.cs"/>
      <include name="${base.dir}/${lib.name}/SecurityFoundation_T/Security*.cs"/>
      <exclude name="${base.dir}/${lib.name}/SecurityFoundation_T/KeyChainServices.cs"/>
    </fileset>
    <call target="build-library-intern"/>

    <assemblyfileset id="lib.references" basedir="${output.dir}">
      <include name="System.dll"/>
      <include name="System.Core.dll"/>
      <include name="Monobjc.dll"/>
      <include name="Monobjc.Foundation.dll"/>
      <include name="Monobjc.Security.dll"/>
      <include name="Monobjc.SecurityFoundation.dll"/>
    </assemblyfileset>
    
    <!-- Library Monobjc.CoreWLAN -->
    <property name="lib.name" value="Monobjc.CoreWLAN"/>
    <fileset id="src.references" basedir="${output.dir}">
      <include name="${base.dir}/${lib.name}/*.cs"/>
      <include name="${base.dir}/${lib.name}/CoreWLAN_C/*.cs"/>
      <include name="${base.dir}/${lib.name}/CoreWLAN_T/*.cs"/>
      <include name="${base.dir}/${lib.name}/Properties/*.cs"/>
    </fileset>
    <call target="build-library-intern"/>

    <assemblyfileset id="lib.references" basedir="${output.dir}">
      <include name="System.dll"/>
      <include name="System.Core.dll"/>
      <include name="Monobjc.dll"/>
      <include name="Monobjc.Foundation.dll"/>
    </assemblyfileset>
    
    <!-- Library Monobjc.AppKit 
    <property name="lib.name" value="Monobjc.AppKit"/>
    <fileset id="src.references" basedir="${output.dir}">
      <include name="${base.dir}/${lib.name}/*.cs"/>
      <include name="${base.dir}/${lib.name}/AppKit_C/*.cs"/>
      <include name="${base.dir}/${lib.name}/AppKit_E/*.cs"/>
      <include name="${base.dir}/${lib.name}/AppKit_Extensions/*.cs"/>
      <include name="${base.dir}/${lib.name}/AppKit_P/*.cs"/>
      <exclude name="${base.dir}/${lib.name}/AppKit_P/*.Deprecated.Protocol.cs"/>
      <include name="${base.dir}/${lib.name}/AppKit_S/*.cs"/>
      <include name="${base.dir}/${lib.name}/AppKit_T/*.cs"/>
      <include name="${base.dir}/${lib.name}/ApplicationServices_Functions/*.cs"/>
      <include name="${base.dir}/${lib.name}/ApplicationServices_Extensions/*.cs"/>
      <include name="${base.dir}/${lib.name}/ApplicationServices_S/*.cs"/>
      <include name="${base.dir}/Monobjc.Foundation/ApplicationServices_T/*.cs"/>
      <exclude name="${base.dir}/Monobjc.Foundation/ApplicationServices_T/CGAffineTransform.cs"/>
      <exclude name="${base.dir}/Monobjc.Foundation/ApplicationServices_T/*.Deprecated.cs"/>
      <include name="${base.dir}/${lib.name}/CoreData_C/*.cs"/>
      <include name="${base.dir}/${lib.name}/CoreData_Extensions/*.cs"/>
      <include name="${base.dir}/${lib.name}/CoreData_T/*.cs"/>
      <include name="${base.dir}/${lib.name}/CoreServices_T/*.cs"/>
      <include name="${base.dir}/${lib.name}/Properties/*.cs"/>
      <include name="${base.dir}/${lib.name}/QuartzCore_C/*.cs"/>
      <include name="${base.dir}/${lib.name}/QuartzCore_Extensions/*.cs"/>
      <include name="${base.dir}/${lib.name}/QuartzCore_Functions/*.cs"/>
      <include name="${base.dir}/${lib.name}/QuartzCore_P/*.cs"/>
      <include name="${base.dir}/${lib.name}/QuartzCore_S/*.cs"/>
      <include name="${base.dir}/${lib.name}/QuartzCore_T/*.cs"/>
    </fileset>
    <call target="build-library-intern"/>
    -->

    <assemblyfileset id="lib.references" basedir="${output.dir}">
      <include name="System.dll"/>
      <include name="System.Core.dll"/>
      <include name="Monobjc.dll"/>
      <include name="Monobjc.Foundation.dll"/>
      <include name="Monobjc.AppKit.dll"/>
    </assemblyfileset>

    <!-- Library Monobjc.AddressBook 
    <property name="lib.name" value="Monobjc.AddressBook"/>
    <fileset id="src.references" basedir="${output.dir}">
      <include name="${base.dir}/${lib.name}/*.cs"/>
      <include name="${base.dir}/${lib.name}/AddressBook_C/*.cs"/>
      <include name="${base.dir}/${lib.name}/AddressBook_P/*.cs"/>
      <include name="${base.dir}/${lib.name}/AddressBook_T/*.cs"/>
      <include name="${base.dir}/${lib.name}/Properties/*.cs"/>
    </fileset>
    <call target="build-library-intern"/>
    -->

    <!-- Library Monobjc.CoreMedia 
    <property name="lib.name" value="Monobjc.CoreMedia"/>
    <fileset id="src.references" basedir="${output.dir}">
      <include name="${base.dir}/${lib.name}/*.cs"/>
      <include name="${base.dir}/${lib.name}/CoreMedia_Extensions/*.cs"/>
      <include name="${base.dir}/${lib.name}/CoreMedia_S/*.cs"/>
      <include name="${base.dir}/${lib.name}/CoreMedia_T/*.cs"/>
      <include name="${base.dir}/${lib.name}/Properties/*.cs"/>
    </fileset>
    <call target="build-library-intern"/>
    -->

    <!-- Library Monobjc.CorePlot 
    <property name="lib.name" value="Monobjc.CorePlot"/>
    <fileset id="src.references" basedir="${output.dir}">
      <include name="${base.dir}/${lib.name}/*.cs"/>
      <include name="${base.dir}/${lib.name}/CorePlot_C/*.cs"/>
      <include name="${base.dir}/${lib.name}/CorePlot_Extensions/*.cs"/>
      <include name="${base.dir}/${lib.name}/CorePlot_P/*.cs"/>
      <include name="${base.dir}/${lib.name}/CorePlot_S/*.cs"/>
      <include name="${base.dir}/${lib.name}/Properties/*.cs"/>
    </fileset>
    <call target="build-library-intern" if="${directory::exists('/Library/Frameworks/CorePlot.framework')}"/>
    -->

    <!-- Library Monobjc.Growl 
    <property name="lib.name" value="Monobjc.Growl"/>
    <fileset id="src.references" basedir="${output.dir}">
      <include name="${base.dir}/${lib.name}/*.cs"/>
      <include name="${base.dir}/${lib.name}/Growl_C/*.cs"/>
      <include name="${base.dir}/${lib.name}/Growl_P/*.cs"/>
      <include name="${base.dir}/${lib.name}/Properties/*.cs"/>
    </fileset>
    <call target="build-library-intern" if="${directory::exists('/Library/Frameworks/Growl.framework')}"/>
    -->

    <!-- Library Monobjc.InputMethodKit 
    <property name="lib.name" value="Monobjc.InputMethodKit"/>
    <fileset id="src.references" basedir="${output.dir}">
      <include name="${base.dir}/${lib.name}/*.cs"/>
      <include name="${base.dir}/${lib.name}/InputMethodKit_C/IMK*.cs"/>
      <exclude name="${base.dir}/${lib.name}/InputMethodKit_C/IMKServer.Protocols.cs"/>
      <include name="${base.dir}/${lib.name}/InputMethodKit_P/*.cs"/>
      <include name="${base.dir}/${lib.name}/Properties/*.cs"/>
    </fileset>
    <call target="build-library-intern"/>
    -->

    <!-- Library Monobjc.QTKit 
    <property name="lib.name" value="Monobjc.QTKit"/>
    <fileset id="src.references" basedir="${output.dir}">
      <include name="${base.dir}/${lib.name}/*.cs"/>
      <include name="${base.dir}/${lib.name}/Properties/*.cs"/>
      <include name="${base.dir}/${lib.name}/QTKit_C/*.cs"/>
      <include name="${base.dir}/${lib.name}/QTKit_E/*.cs"/>
      <include name="${base.dir}/${lib.name}/QTKit_S/*.cs"/>
      <include name="${base.dir}/${lib.name}/QTKit_T/*.cs"/>
    </fileset>
    <call target="build-library-intern"/>
    -->

    <!-- Library Monobjc.Quartz 
    <property name="lib.name" value="Monobjc.Quartz"/>
    <fileset id="src.references" basedir="${output.dir}">
      <include name="${base.dir}/${lib.name}/*.cs"/>
      <include name="${base.dir}/${lib.name}/Properties/*.cs"/>
      <include name="${base.dir}/${lib.name}/Quartz_C/*.cs"/>
      <include name="${base.dir}/${lib.name}/Quartz_E/*.cs"/>
      <include name="${base.dir}/${lib.name}/Quartz_P/*.cs"/>
    </fileset>
    <call target="build-library-intern"/>
    -->

    <!-- Library Monobjc.Sparkle 
    <property name="lib.name" value="Monobjc.Sparkle"/>
    <fileset id="src.references" basedir="${output.dir}">
      <include name="${base.dir}/${lib.name}/*.cs"/>
      <include name="${base.dir}/${lib.name}/Properties/*.cs"/>
      <include name="${base.dir}/${lib.name}/Sparkle_C/*.cs"/>
      <include name="${base.dir}/${lib.name}/Sparkle_P/*.cs"/>
    </fileset>
    <call target="build-library-intern" if="${directory::exists('/Library/Frameworks/Growl.framework')}"/>
    -->

    <!-- Library Monobjc.WebKit 
    <property name="lib.name" value="Monobjc.WebKit"/>
    <fileset id="src.references" basedir="${output.dir}">
      <include name="${base.dir}/${lib.name}/*.cs"/>
      <include name="${base.dir}/${lib.name}/Properties/*.cs"/>
      <include name="${base.dir}/${lib.name}/WebKit.DOM_C/*.cs"/>
      <include name="${base.dir}/${lib.name}/WebKit.DOM_P/*.cs"/>
      <include name="${base.dir}/${lib.name}/WebKit_C/*.cs"/>
      <include name="${base.dir}/${lib.name}/WebKit_P/*.cs"/>
      <exclude name="${base.dir}/${lib.name}/WebKit_P/*Deprecated*.cs"/>
      <exclude name="${base.dir}/${lib.name}/WebKit_P/WebJavaPlugIn*.cs"/>
      <include name="${base.dir}/${lib.name}/WebKit_T/*.cs"/>
    </fileset>
    <call target="build-library-intern"/>
    -->

    <assemblyfileset id="lib.references" basedir="${output.dir}">
      <include name="System.dll"/>
      <include name="System.Core.dll"/>
      <include name="Monobjc.dll"/>
      <include name="Monobjc.Foundation.dll"/>
      <include name="Monobjc.CoreMedia.dll"/>
      <include name="Monobjc.AppKit.dll"/>
    </assemblyfileset>
    
    <!-- Library Monobjc.AVFoundation 
    <property name="lib.name" value="Monobjc.AVFoundation"/>
    <fileset id="src.references" basedir="${output.dir}">
      <include name="${base.dir}/${lib.name}/*.cs"/>
      <include name="${base.dir}/${lib.name}/AVFoundation_C/*.cs"/>
      <include name="${base.dir}/${lib.name}/AVFoundation_P/*.cs"/>
      <include name="${base.dir}/${lib.name}/AVFoundation_T/*.cs"/>
      <include name="${base.dir}/${lib.name}/Properties/*.cs"/>
    </fileset>
    <call target="build-library-intern"/>
    -->

    <assemblyfileset id="lib.references" basedir="${output.dir}">
      <include name="System.dll"/>
      <include name="System.Core.dll"/>
      <include name="Monobjc.dll"/>
      <include name="Monobjc.Foundation.dll"/>
      <include name="Monobjc.DiscRecording.dll"/>
      <include name="Monobjc.AppKit.dll"/>
    </assemblyfileset>
    
    <!-- Library Monobjc.DiscRecordingUI
    <property name="lib.name" value="Monobjc.DiscRecordingUI"/>
    <fileset id="src.references" basedir="${output.dir}">
      <include name="${base.dir}/${lib.name}/*.cs"/>
      <include name="${base.dir}/${lib.name}/DiscRecordingUI_C/*.cs"/>
      <exclude name="${base.dir}/${lib.name}/DiscRecordingUI_C/*Session*.cs"/>
      <include name="${base.dir}/${lib.name}/DiscRecordingUI_Extensions/*.cs"/>
      <include name="${base.dir}/${lib.name}/DiscRecordingUI_P/*.cs"/>
      <include name="${base.dir}/${lib.name}/DiscRecordingUI_T/*.cs"/>
      <include name="${base.dir}/${lib.name}/Properties/*.cs"/>
    </fileset>
    <call target="build-library-intern"/>
    -->

    <assemblyfileset id="lib.references" basedir="${output.dir}">
      <include name="System.dll"/>
      <include name="System.Core.dll"/>
      <include name="Monobjc.dll"/>
      <include name="Monobjc.Foundation.dll"/>
      <include name="Monobjc.Security.dll"/>
      <include name="Monobjc.SecurityFoundation.dll"/>
      <include name="Monobjc.AppKit.dll"/>
    </assemblyfileset>
    
    <!-- Library Monobjc.SecurityInterface
    <property name="lib.name" value="Monobjc.SecurityInterface"/>
    <fileset id="src.references" basedir="${output.dir}">
      <include name="${base.dir}/${lib.name}/*.cs"/>
      <include name="${base.dir}/${lib.name}/Properties/*.cs"/>
      <include name="${base.dir}/${lib.name}/SecurityInterface_C/*.cs"/>
      <exclude name="${base.dir}/${lib.name}/SecurityInterface_C/SFAuthorizationPluginView*.cs"/>
      <include name="${base.dir}/${lib.name}/SecurityInterface_Extensions/*.cs"/>
      <include name="${base.dir}/${lib.name}/SecurityInterface_T/*.cs"/>
    </fileset>
    <call target="build-library-intern"/>
    -->

  </target>

  <!-- ===============================================================================
  Build a library
  ================================================================================ -->
  <target name="build-library-intern">
    <echo message="Library ${lib.name}"/>

    <!-- Compile the library with signing -->
    <csc target="library"
         output="${output.dir}/${lib.name}.dll"
       keyfile="${key.file}"
         doc="${output.dir}/${lib.name}.xml"
         debug="${debug}"
         define="${define}" unless="${testing}">
      <nowarn >
        <warning number="1574,1584,1591"/>
      </nowarn>
      <sources refid="src.references"/>
      <resources prefix="${lib.name}.Properties">
        <include name="${base.dir}/${lib.name}/**/*.resx"/>
      </resources>
      <references refid="lib.references"/>
    </csc>

    <!-- Compile the library -->
    <csc target="library"
         output="${output.dir}/${lib.name}.dll"
         doc="${output.dir}/${lib.name}.xml"
         debug="${debug}"
         define="${define}" if="${testing}">
      <nowarn >
        <warning number="1574,1584,1591"/>
      </nowarn>
      <sources refid="src.references"/>
      <resources prefix="${lib.name}.Properties">
        <include name="${base.dir}/${lib.name}/**/*.resx"/>
      </resources>
      <references refid="lib.references"/>
    </csc>

  </target>

</project>
